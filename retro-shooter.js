// Generated by CoffeeScript 1.6.3
var RetroShooter,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

RetroShooter = (function() {
  RetroShooter.prototype.tickMs = 33;

  RetroShooter.prototype.canvas = null;

  RetroShooter.prototype.ctx = null;

  RetroShooter.prototype.width = 640;

  RetroShooter.prototype.height = 480;

  function RetroShooter() {
    this.tick = __bind(this.tick, this);
    this.canvas = document.createElement('canvas');
    document.body.appendChild(this.canvas);
    this.canvas.width = this.width;
    this.canvas.height = this.height;
    this.ctx = this.canvas.getContext('2d');
    setInterval(this.tick, this.tickMs);
  }

  RetroShooter.prototype.tick = function() {
    this.update();
    return this.draw();
  };

  RetroShooter.prototype.update = function() {
    return 0;
  };

  RetroShooter.prototype.draw = function() {
    this.clear();
    return this.drawBackground();
  };

  RetroShooter.prototype.drawBackground = function() {
    var x, _i, _ref, _results;
    this.ctx.lineWidth = 1;
    _results = [];
    for (x = _i = 0, _ref = this.width; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
      _results.push(this.drawVerticalLine('rgb(' + (x % 256) + ', 0, 0)', x, 10, this.height - 10));
    }
    return _results;
  };

  RetroShooter.prototype.drawVerticalLine = function(color, x, y1, y2) {
    return this.drawLine(color, x + 0.5, y1, x + 0.5, y2);
  };

  RetroShooter.prototype.drawLine = function(color, x1, y1, x2, y2) {
    this.ctx.strokeStyle = color;
    this.ctx.beginPath();
    this.ctx.moveTo(x1, y1);
    this.ctx.lineTo(x2, y2);
    this.ctx.stroke();
    return this.ctx.closePath();
  };

  RetroShooter.prototype.clear = function() {
    this.ctx.fillStyle = 'black';
    return this.ctx.fillRect(0, 0, this.width, this.height);
  };

  return RetroShooter;

})();
